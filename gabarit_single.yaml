heat_template_version: 2013-05-23

description: Simple template to deploy a single compute instance

parameters:
  private_subnet_id:
    type: string
    default: inf4410-net
    constraints:
     - custom_constraint: neutron.network
  key_name:
    type: string
    description: Name of an existing key pair to use for the server
    constraints:
      - custom_constraint: nova.keypair
  flavor:
    type: string
    description: Flavor for the server to be created
    default: INF4410-mini
    constraints:
      - custom_constraint: nova.flavor
  image:
    type: string
    description: Image ID or image name to use for the server
    default: INF4410-Ubuntu-trusty-mini 
    constraints:
      - custom_constraint: glance.image

  admin_pass:
    type: string
    description: Admin password
    hidden: true
    constraints:
      - length: { min: 6, max: 8 }
        description: Password length must be between 6 and 8 characters
      - allowed_pattern: "[a-zA-Z0-9]+"
        description: Password must consist of characters and numbers only
      - allowed_pattern: "[A-Z]+[a-zA-Z0-9]*"
        description: Password must start with an uppercase character

resources:
  server:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      admin_pass: { get_param: admin_pass }
      networks:
              - network: { get_param: private_subnet_id }
      user_data_format: RAW
      user_data: |
            #!/bin/bash
            wget https://raw.githubusercontent.com/houssemmh/INF8480-TP3/master/server.py
            python server.py
  
  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network:  { get_param: private_subnet_id }

  floating_ip_association:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: floating_ip }
      server_id: { get_resource: server }


outputs:
  server_networks:
    description: The networks of the deployed server
    value: { get_attr: [server, networks] }
